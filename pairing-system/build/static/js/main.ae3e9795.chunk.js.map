{"version":3,"sources":["components/home.js","components/pairing.js","components/history.js","components/addStudent.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","style","left","top","padding","index_es","container","direction","justify","alignItems","item","backgroundColor","height","width","Link","to","color","Component","CustomTableCell","withStyles","theme","head","palette","common","black","white","body","fontSize","TableCell","Pairing","pairing","ar","pair2","q","Student2","length","push","studentName","index","arr","i","Math","floor","random","splice","t","o","console","log","setState","filterStudent","filterStudent1","saveStudent","alert","axios","post","student1","student2","then","res","catch","err","_this2","get","data","_this3","map","row","TableRow_default","className","classes","component","scope","elem","borderRadius","margin","onClick","Paper_default","root","Table_default","table","TableHead_default","TableCell_default","TableBody_default","marginTop","spacing","unit","overflowX","minWidth","&:nth-of-type(odd)","background","default","history","Axios","_ref","history_CustomTableCell","Level","value","label","rand","round","styles","textField","marginLeft","marginRight","paper","position","boxShadow","shadows","level","AddStudent","updateLevel","id","method","url","headers","Content-Type","window","location","reload","onChange","text","target","handleChange","name","event","defineProperty","handleChangeModel","addStudent","deleteRow","handleOpen","open","handleClose","rows","placeholder","type","select","SelectProps","native","MenuProps","helperText","option","key","addStudent_CustomTableCell","numeric","_id","Modal_default","onClose","concat","transform","getModalStyle","Typography_default","variant","fullWidth","App","BrowserRouter","Switch","Route","path","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ae3e9795.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Grid, Card, TextField, Button } from \"@material-ui/core\";\nimport { Link } from 'react-router-dom'\nclass Home extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n\n        }\n    }\n\n    render() {\n        return (\n            <div style={{\n                left: \"40%\",\n                top: \"40%\",\n                padding: \"150px\"\n            }}>\n                <Grid container direction=\"column\" justify=\"space-evenly\" alignItems=\"center\" >\n\n                    <Grid item>\n                        <Card style={{ backgroundColor: \"#337ab7\" }}>\n\n                            <Button style={{\n                                height: \"70px\",\n                                width: \"200px\",\n                            }}>\n                                <Link to=\"/addStudent\" style={{ color: \"white\" }}> ADD STUDENT </Link>\n                            </Button>\n\n\n                        </Card>\n\n                    </Grid>\n                    <Grid item>\n                        <br />\n                    </Grid>\n                    <Grid item>\n                        <Card style={{ backgroundColor: \"#337ab7\" }}>\n\n                            <Button style={{\n                                height: \"70px\",\n                                width: \"200px\",\n                            }}>\n                                <Link to=\"/pairing\" style={{ color: \"white\" }}>PARING</Link>\n                            </Button>\n\n\n                        </Card>\n\n                    </Grid>\n                    <Grid item>\n                        <br />\n                    </Grid>\n                    <Grid item>\n                        <Card style={{ backgroundColor: \"#337ab7\" }}>\n\n                            <Button style={{\n                                height: \"70px\",\n                                width: \"200px\",\n                            }}>\n                                <Link to=\"/history\" style={{ color: \"white\" }}>history</Link>\n                            </Button>\n\n\n                        </Card>\n\n                    </Grid>\n                </Grid>\n\n            </div>\n        )\n    }\n}\nexport default Home;","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Grid, Button } from \"@material-ui/core\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nconst CustomTableCell = withStyles(theme => ({\n    head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n        width: \"100%\"\n    },\n}))(TableCell);\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 400,\n    },\n    row: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n});\n\nclass Pairing extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            Student2: [],\n            filterStudent: [],\n            filterStudent1: [],\n        }\n    }\n    componentDidMount() {\n        axios.get('/getParingStudent').then(res => {\n            this.setState({\n                Student2: res.data\n            })\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n\n    pairing = () => {\n        let ar = []\n        let pair2 = []\n        for (let q = 0; q < this.state.Student2.length; q++) { //filter the array\n            ar.push(this.state.Student2[q].studentName)\n            pair2.push(this.state.Student2[q].studentName)\n        }\n        let arr = []\n        let index\n        for (let i = 0; i < ar.length; i++) { // random pair\n            index = Math.floor(Math.random() * ar.length)\n            arr.push(ar[index])\n            ar.splice(index, 1)\n            i--\n        }\n        for (let t = 0; t < pair2.length; t++) { //None repeated users\n            for (let o = 0; o < arr.length; o++) {\n                if (pair2[t] === arr[o] && t === o) {\n                    console.log(\"checkk\", pair2[t], arr[o], \"index: \", t, o)\n                    return this.pairing()\n                }\n            }\n        }\n        this.setState({ filterStudent: arr, filterStudent1: pair2 })\n    }\n    saveStudent = () => {\n        if (this.state.filterStudent1.length === 0) {\n            alert('add a pair before save ')\n        } else {\n            axios.post('/saveStudents', { student1: this.state.filterStudent1, student2: this.state.filterStudent })\n                .then(res => {\n                    alert('your data has been saved');\n                }).catch(err => {\n                    console.log(err);\n                })\n        }\n    }\n    //{one:filterStudent1 , two : filterStudent}\n    render() {\n        const student1 = this.state.Student2.map(row => {\n            return (\n                <TableRow className={this.props.classes.row} >\n                    <CustomTableCell component=\"th\" scope=\"row\">\n                        {row.studentName}\n                    </CustomTableCell>\n                </TableRow>\n            )\n        }) \n        const student2 = this.state.filterStudent.map(elem => {\n            return (\n                <TableRow className={this.props.classes.row} >\n                    <CustomTableCell component=\"th\" scope=\"row\">\n                        {elem}\n                    </CustomTableCell>\n                </TableRow>\n            )\n        })\n        return (\n            <Grid container direction='column' justify='space-evenly'>\n                <Grid item >\n                    <Grid container justify='space-around'>\n                        <Grid item>\n                            <Button style={{\n                                height: \"50px\",\n                                width: \"200px\",\n                                backgroundColor: \"#5cb85c\",\n                                borderRadius: '25px',\n                                color: \"white\",\n                                margin: \"20px\"\n                            }} onClick={this.pairing}>Pairing</Button>\n                        </Grid>\n                        <Grid item>\n                            <Button style={{\n                                height: \"50px\",\n                                width: \"200px\",\n                                backgroundColor: \"#5cb85c\",\n                                borderRadius: '25px',\n                                color: \"white\",\n                                margin: \"20px\"\n                            }} onClick={this.saveStudent}>Save</Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item >\n                    <br />\n                </Grid>\n                <Grid item >\n                    <br />\n                </Grid>\n                <Grid item >\n                    <Grid container justify='space-evenly'>\n                        <Grid item>\n                            <Paper className={this.props.classes.root}>\n                                <Table className={this.props.classes.table}>\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>Student1</TableCell>\n                                            <TableCell> Student2 </TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        <TableCell>{student1}</TableCell>\n                                        <TableCell>{student2}</TableCell>\n                                    </TableBody>\n                                </Table>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        )\n    }\n}\n\nPairing.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Pairing);","import React, { Component } from 'react'\nimport { withStyles } from '@material-ui/core/styles';\nimport { Grid, Paper, TableBody, Table, TableCell, TableHead, TableRow } from '@material-ui/core';\nimport Axios from 'axios';\n\nconst CustomTableCell = withStyles(theme => ({\n    head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n        width: \"100%\"\n    },\n}))(TableCell);\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 400,\n    },\n    row: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n});\nclass history extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            data: []\n        }\n    }\n    componentDidMount() {\n        Axios.get('/get/history')\n            .then(({ data }) => {\n                this.setState({ data })\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n\n    render() {\n        return (\n            <Grid container direction='column' justify='center' alignItems='center'>\n                {\n                    this.state.data.map(elem => {\n                        const student1 = elem.student1.map(row => {\n                            return (\n                                <TableRow className={this.props.classes.row} >\n                                    <CustomTableCell component=\"th\" scope=\"row\">\n                                        {row}\n                                    </CustomTableCell>\n                                </TableRow>\n                            )\n                        })\n                        const student2 = elem.student2.map(elem => {\n                            return (\n                                <TableRow className={this.props.classes.row} >\n                                    <CustomTableCell component=\"th\" scope=\"row\">\n                                        {elem}\n                                    </CustomTableCell>\n                                </TableRow>\n                            )\n                        })\n                        return (\n                            <Grid item style={{margin:\"30px\"}} >\n                                <Paper >\n                                    <Table >\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell>Student1</TableCell>\n                                                <TableCell> Student2 </TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            <TableCell>{student1}</TableCell>\n                                            <TableCell>{student2}</TableCell>\n                                        </TableBody>\n                                    </Table>\n                                </Paper>\n                            </Grid>\n                        )\n                    })\n                }\n            </Grid>\n        )\n    }\n}\nexport default withStyles(styles)(history);\n\n\n/*\n    \n */","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Grid, TextField, Button } from \"@material-ui/core\";\nimport Modal from '@material-ui/core/Modal';\nimport Typography from '@material-ui/core/Typography';\n\nimport axios from 'axios';\n\nconst Level = [\n    {\n        value: '1',\n        label: '1',\n    },\n    {\n        value: '2',\n        label: '2',\n    },\n    {\n        value: '3',\n        label: '3',\n    },\n    {\n        value: '4',\n        label: '4',\n    },\n    {\n        value: '5',\n        label: '5',\n    },\n];\n\nfunction rand() {\n    return Math.round(Math.random() * 20) - 10;\n}\nfunction getModalStyle() {\n    const top = 50 + rand();\n    const left = 50 + rand();\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst CustomTableCell = withStyles(theme => ({\n    head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 700,\n    },\n    row: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.background.default,\n        },\n        textField: {\n            marginLeft: theme.spacing.unit,\n            marginRight: theme.spacing.unit,\n        },\n\n    },\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing.unit * 4,\n    },\n    level: {\n        width: 300,\n    },\n});\n\n\n\nclass AddStudent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            studentName: '',\n            level: '1',\n            updateLevel: '1',\n            rows: [],\n            open: false,\n            id: ''\n        }\n    }\n    updateLevel = () => {\n        console.log('jackel is here', this.state.id);\n        axios({\n            method: 'POST',\n            url: '/updateLevel',\n            data: { level: this.state.updateLevel, id: this.state.id },\n            headers: { 'Content-Type': 'application/json' }\n        }).then(res => {\n            alert(\"your level has been updated\")\n            window.location.reload()\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n    componentDidMount() {\n        axios.get('/getStudents').then(res => {\n            this.setState({\n                rows: res.data,\n            })\n\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n\n    onChange = (text) => {\n        this.setState({ studentName: text.target.value })\n\n    }\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n    handleChangeModel = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    }\n    addStudent = () => {\n        if (this.state.studentName.length === 0) {\n            alert(\"Kindly add your name frist <3\")\n        } else {\n            axios({\n                method: 'POST',\n                url: '/addstudent',\n                data: { studentName: this.state.studentName, level: this.state.level },\n                headers: { 'Content-Type': 'application/json' }\n            })\n                .then((res) => {\n                    alert('your information has been save')\n                    window.location.reload();\n                }).catch((err) => {\n                    alert('this student is already exist')\n                })\n        }\n\n    }\n\n    deleteRow = (id) => {\n        axios({\n            method: 'POST',\n            url: '/deleteStudent',\n            data: { id },\n            headers: { 'Content-Type': 'application/json' }\n        }).then(res => {\n            alert('your row has been deleted');\n            window.location.reload();\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n\n    handleOpen = (id) => {\n        this.setState({ id: id, open: true });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n    render() {\n        return (\n            <Grid container>\n                <Grid container direction=\"row\" justify=\"space-evenly\" >\n                    <Grid item >\n                        <TextField\n                            label=\"Full Name\"\n                            placeholder=\"Full Name\"\n                            type=\"text\"\n                            className={styles.textField}\n                            margin=\"normal\"\n                            onChange={this.onChange}\n                        />\n                    </Grid>\n                    <Grid item >\n                        <TextField\n                            id=\"Standar Level\"\n                            select\n                            label=\"Level (1-5)\"\n                            className={styles.textField}\n                            value={this.state.level}\n                            onChange={this.handleChange('level')}\n                            SelectProps={{\n                                native: true,\n                                MenuProps: {\n                                    className: styles.level,\n                                },\n                            }}\n                            helperText=\"Please select your level\"\n                            margin=\"normal\"\n                        >\n                            {Level.map(option => (\n                                <option key={option.value} value={option.value}>\n                                    {option.label}\n                                </option>\n                            ))}\n                        </TextField>\n\n                    </Grid>\n                    <Grid item >\n                        <Button onClick={this.addStudent} style={{\n                            height: \"50px\",\n                            width: \"200px\",\n                            backgroundColor: \"#5cb85c\",\n                            borderRadius: '25px',\n                            color: \"white\",\n                            margin: \"20px\"\n                        }} > Add </Button>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid item>\n                        <br />\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid item>\n                        <br />\n                    </Grid>\n                </Grid>\n                <Grid container justify=\"space-evenly\">\n                    <Grid item>\n                        <Paper className={styles.root}>\n                            <Table className={styles.table}>\n                                <TableHead>\n                                    <TableRow>\n                                        <CustomTableCell>NAME</CustomTableCell>\n                                        <CustomTableCell >LEVEL</CustomTableCell>\n                                        <CustomTableCell >EDIT OR DELETE</CustomTableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {this.state.rows.map(row => {\n                                        return (\n                                            <TableRow className={styles.row} key={row.id} >\n                                                <CustomTableCell component=\"th\" scope=\"row\">\n                                                    {row.studentName}\n                                                </CustomTableCell>\n                                                <CustomTableCell numeric>{row.level}</CustomTableCell>\n                                                <Button style={{\n                                                    backgroundColor: \"#17a2b8\",\n                                                    borderRadius: '25px',\n                                                    color: \"white\",\n                                                    margin: \"20px\"\n                                                }} onClick={() => this.handleOpen(row._id)}>Edit</Button>\n\n                                                <Button onClick={() => this.deleteRow(row._id)} style={{\n                                                    backgroundColor: \"#dc3545\",\n                                                    borderRadius: '25px',\n                                                    color: \"white\",\n                                                    margin: \"20px\"\n                                                }}>Delete</Button>\n                                            </TableRow>\n\n\n                                        );\n                                    })}\n\n                                </TableBody>\n\n                            </Table>\n\n                        </Paper>\n\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid item> <br /></Grid>\n                </Grid>\n                <Grid container>\n                    <Grid item> <br /></Grid>\n                </Grid>\n\n\n                <Grid container>\n                    <div>\n                        <Modal\n\n                            open={this.state.open}\n                            onClose={this.handleClose}\n                        >\n                            <div style={getModalStyle()} className={this.props.classes.paper}>\n                                <Typography variant=\"h6\" id=\"modal-title\">\n                                    You can only update your level\n                                </Typography>\n                                <Grid item direction=\"row\" justify=\"space-evenly\">\n                                    <TextField\n                                        id=\"Standar Level1\"\n                                        select\n                                        label=\"Select your level from(1-5)\"\n\n                                        fullWidth\n                                        className={styles.textField}\n                                        value={this.state.updateLevel}\n                                        onChange={this.handleChangeModel('updateLevel')}\n                                        SelectProps={{\n                                            native: true,\n                                            MenuProps: {\n                                                className: styles.level,\n                                            },\n                                        }}\n                                        helperText=\"Edit your level\"\n                                        margin=\"normal\"\n\n                                    >\n                                        {Level.map(option => (\n                                            <option key={option.value} value={option.value}>\n                                                {option.label}\n                                            </option>\n                                        ))}\n                                    </TextField>\n\n                                    <Button onClick={this.updateLevel} style={{\n                                        height: \"50px\",\n                                        width: \"200px\",\n                                        backgroundColor: \"#5cb85c\",\n                                        borderRadius: '25px',\n                                        color: \"white\",\n                                        margin: \"20px\"\n                                    }} > Submit your update </Button>\n                                </Grid>\n                            </div>\n                        </Modal>\n                    </div>\n                </Grid>\n            </Grid >\n        )\n    }\n}\n\nAddStudent.propTypes = {\n    classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(AddStudent);\n\n\n\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Home from './components/home';\nimport Pairing from './components/pairing'\nimport history from './components/history';\nimport AddStudent from \"./components/addStudent\"\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/history\" component={history} />\n          <Route path=\"/pairing\" component={Pairing} />\n          <Route path=\"/addStudent\" component={AddStudent} />\n          <Route path=\"/\" component={Home} />\n\n        </Switch>\n      </BrowserRouter>\n\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}